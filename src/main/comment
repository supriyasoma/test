@Test
    public void testGetRecipesByUserId() {
        Long userId = 456L;
        List<RecipeResponseDTO> recipeList = Arrays.asList(
                new RecipeResponseDTO("1", "Recipe 1", "Ingredients 1", "Procedures 1", true),
                new RecipeResponseDTO("2", "Recipe 2", "Ingredients 2", "Procedures 2", false)
        );

        when(recipeService.getRecipesByUser(userId)).thenReturn(recipeList);

        ResponseEntity<List<RecipeResponseDTO>> responseEntity = controller.getRecipesByUserId(userId);

        verify(recipeService, times(1)).getRecipesByUser(userId);
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(recipeList, responseEntity.getBody());
    }

    @Test
    public void testGetFile() {
        String fileId = "123";
        byte[] fileData = "File Content".getBytes();
        String filename = "test.jpg";
        ResponseDTO responseDTO = new ResponseDTO();
        responseDTO.setData(fileData);
        responseDTO.setThumbnailImage(filename);

        when(recipeService.getImageFile(fileId)).thenReturn(responseDTO);

        ResponseEntity<byte[]> responseEntity = controller.getFile(fileId);

        verify(recipeService, times(1)).getImageFile(fileId);
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(fileData.length, responseEntity.getBody().length);
        assertEquals(filename, responseEntity.getHeaders().getFirst(HttpHeaders.CONTENT_DISPOSITION).substring("attachment; filename=\"".length(), responseEntity.getHeaders().getFirst(HttpHeaders.CONTENT_DISPOSITION).length() - 1));
    }
