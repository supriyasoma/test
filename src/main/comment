@Test
void testGetRecipeById_RecipeFound() {
    // Mocking data
    String recipeId = "123";
    Recipe existingRecipe = new Recipe();
    existingRecipe.setId(recipeId);

    // Mocking HttpServletRequest
    MockHttpServletRequest request = new MockHttpServletRequest();
    request.setContextPath("/api");

    // Mocking recipe retrieval
    when(recipeRepository.findById(recipeId)).thenReturn(Optional.of(existingRecipe));

    // Mocking ServletUriComponentsBuilder
    UriComponentsBuilder uriComponentsBuilder = UriComponentsBuilder.fromRequest(request);

    // Call getRecipeById and expect a RecipeDTO object to be returned
    RecipeDTO resultDTO = recipeService.getRecipeById(recipeId, uriComponentsBuilder);

    // Verify that recipeRepository.findById was called once with the provided recipeId
    verify(recipeRepository, times(1)).findById(recipeId);

    // Check that the returned RecipeDTO has the correct recipe ID and thumbnail image URL
    assertNotNull(resultDTO, "RecipeDTO should not be null");
    assertEquals(recipeId, resultDTO.getId(), "Returned recipe ID should match");

    // Verify that the thumbnail image URL is set correctly
    assertEquals("/api/recipes/files/" + recipeId, resultDTO.getThumbnailImageUrl(), "Thumbnail image URL should match");
}
