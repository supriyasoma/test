import { TestBed, ComponentFixture } from '@angular/core/testing';
import { LoginComponent } from './login.component';
import { UserService } from '../user.service';
import { Router } from '@angular/router';

describe('LoginComponent', () => {
  let component: LoginComponent;
  let fixture: ComponentFixture<LoginComponent>;
  let userService: jasmine.SpyObj<UserService>;
  let router: jasmine.SpyObj<Router>;

  beforeEach(async () => {
    const userServiceSpy = jasmine.createSpyObj('UserService', ['loginUser']);
    const routerSpy = jasmine.createSpyObj('Router', ['navigate']);

    await TestBed.configureTestingModule({
      declarations: [ LoginComponent ],
      providers: [
        { provide: UserService, useValue: userServiceSpy },
        { provide: Router, useValue: routerSpy }
      ]
    }).compileComponents();

    fixture = TestBed.createComponent(LoginComponent);
    component = fixture.componentInstance;
    userService = TestBed.inject(UserService) as jasmine.SpyObj<UserService>;
    router = TestBed.inject(Router) as jasmine.SpyObj<Router>;
    
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

import { TestBed, ComponentFixture } from '@angular/core/testing';
import { RecipeComponent } from './recipe.component';
import { SweetAlertService } from 'ngx-sweetalert2'; // Import the SweetAlertService
import { By } from '@angular/platform-browser';

describe('RecipeComponent', () => {
  let component: RecipeComponent;
  let fixture: ComponentFixture<RecipeComponent>;
  let sweetAlertServiceSpy: jasmine.SpyObj<SweetAlertService>;

  beforeEach(async () => {
    const sweetAlertServiceSpyObj = jasmine.createSpyObj('SweetAlertService', ['fire']);

    await TestBed.configureTestingModule({
      declarations: [ RecipeComponent ],
      providers: [
        { provide: SweetAlertService, useValue: sweetAlertServiceSpyObj }
      ]
    }).compileComponents();

    sweetAlertServiceSpy = TestBed.inject(SweetAlertService) as jasmine.SpyObj<SweetAlertService>;
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(RecipeComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should call SweetAlertService when button is clicked', () => {
    const button = fixture.debugElement.query(By.css('button'));
    button.triggerEventHandler('click', null);
    expect(sweetAlertServiceSpy.fire).toHaveBeenCalled();
  });
});
