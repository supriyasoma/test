import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.*;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;

class TraceIHMRepositoryTest {

    private TraceIHMRepository traceIHMRepository;

    @Mock
    private NamedParameterJdbcTemplate jdbcTemplate;

    @InjectMocks
    private TraceIHMRepository traceIHMRepositoryTest;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetTraces() {
        // Given
        LocalDate startDate = LocalDate.of(2025, 1, 1);
        LocalDate endDate = LocalDate.of(2025, 1, 31);
        
        // Mocking the behavior of jdbcTemplate.query() method
        MapSqlParameterSource params = new MapSqlParameterSource();
        params.addValue("startDate", java.sql.Date.valueOf(startDate));
        params.addValue("endDate", java.sql.Date.valueOf(endDate));
        
        // Mocking the result set processing (trace data)
        Trace mockTrace = new Trace(
            "01 Jan 2025 12:30:00", "user1", "pfUser1", "program1", "modi1", "lib1", "imp1", "id1", "vale1", "other1"
        );
        List<Trace> mockTraces = Arrays.asList(mockTrace);

        // Mocking jdbcTemplate.query()
        when(jdbcTemplate.query(anyString(), eq(params), any())).thenReturn(mockTraces);

        // When
        List<Trace> traces = traceIHMRepositoryTest.getTraces(startDate, endDate);

        // Then
        assertNotNull(traces);
        assertEquals(1, traces.size());  // There should be one mocked trace
        assertEquals("user1", traces.get(0).getIdUser());
        assertEquals("pfUser1", traces.get(0).getPfUser());
        // Add other assertions as necessary to verify the transformed data
    }

    // Additional test cases
}
