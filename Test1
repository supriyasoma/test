@Scheduled(fixedRate = 3600000) // every 1 hour
public void checkServices() {
    List<MonitoredService> services = serviceRepository.findAll();

    for (MonitoredService service : services) {
        String healthStatus = "UNKNOWN";
        String remarks;

        try {
            String response = webClient.get()
                    .uri(service.getUrl())
                    .retrieve()
                    .bodyToMono(String.class)
                    .block();

            if (response != null && response.contains("\"status\"")) {
                JsonNode node = objectMapper.readTree(response);
                if (node.has("status")) {
                    healthStatus = node.get("status").asText(); // "UP"/"DOWN"
                }
            } else {
                healthStatus = "UP";
            }

            remarks = "OK";
        } catch (Exception e) {
            healthStatus = "DOWN";
            remarks = e.getMessage();
        }

        // ✅ Save ServiceStatus log
        ServiceStatus status = ServiceStatus.builder()
                .service(service)
                .healthStatus(healthStatus)
                .lastChecked(LocalDateTime.now())
                .remarks(remarks)
                .build();
        statusRepository.save(status);

        // ✅ Update MonitoredService latest info
        service.setActive("UP".equalsIgnoreCase(healthStatus));
        service.setLatestHealthStatus(healthStatus);
        service.setLastChecked(LocalDateTime.now());
        serviceRepository.save(service);

        // ✅ Keep only last 7 logs for this service
        List<ServiceStatus> logs = statusRepository.findByServiceOrderByLastCheckedDesc(service);
        if (logs.size() > 7) {
            statusRepository.deleteAll(logs.subList(7, logs.size()));
        }
    }
}
